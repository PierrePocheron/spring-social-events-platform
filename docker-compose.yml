version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres-user-service
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - user-network

  postgres-event:
    image: postgres:15
    container_name: postgres-event-service
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eventdb
    ports:
      - "5433:5432"
    volumes:
      - eventdata:/var/lib/postgresql/data
    networks:
      - user-network

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
    networks:
      - user-network

  discovery-service:
    build:
      context: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - user-network

  gateway-service:
    build:
      context: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-service
      - user-service
      - event-service
    networks:
      - user-network

  event-service:
    build:
      context: ./event-service
    container_name: event-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - postgres-event
      - discovery-service
    networks:
      - user-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - user-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - user-network

volumes:
  pgdata:
  eventdata:

networks:
  user-network:
    driver: bridge
